{
  "address": "0xcA99c7ef5D2a71a636C07bACCE67E8EfcA60F7D9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acct",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldValue",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "Descr500Changed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaidOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenContract",
          "type": "address"
        }
      ],
      "name": "ERC20Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaidOut",
          "type": "uint256"
        }
      ],
      "name": "EthWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acct",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldValue",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "ImageURIChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acct",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldValue",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "Name75Changed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acct",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldValue",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "ProfileURIChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "acct",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldValue",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "Title140Changed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeDescr500",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeImageURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeName75",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeProfileURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "changeTitle140",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "payoutEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenContract",
          "type": "address"
        }
      ],
      "name": "withdrawERC20Tokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x110e6a1e9d768040b66bdfb1dc5113749b49d9ca2a610e22b1cf7c43990f03a2",
  "receipt": {
    "to": null,
    "from": "0x10C86853225241e9F4D13D97C81E5050C5C2e39b",
    "contractAddress": "0xcA99c7ef5D2a71a636C07bACCE67E8EfcA60F7D9",
    "transactionIndex": 0,
    "gasUsed": "728238",
    "logsBloom": "0x
    "blockHash": "0x38c605df9fa59513bf78fe9bdc6eeec32b6207f63a7471e1305e8264be6a51d6",
    "transactionHash": "0x110e6a1e9d768040b66bdfb1dc5113749b49d9ca2a610e22b1cf7c43990f03a2",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17407350,
        "transactionHash": "0x110e6a1e9d768040b66bdfb1dc5113749b49d9ca2a610e22b1cf7c43990f03a2",
        "address": "0x0000000000000000000000000000000000007005",
        "topics": [
          "0x33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f6584729688",
          "0x00000000000000000000000010c86853225241e9f4d13d97c81e5050c5c2e39b"
        ],
        "data": "0x000000000000000000000000ca99c7ef5d2a71a636c07bacce67e8efca60f7d9",
        "logIndex": 0,
        "blockHash": "0x38c605df9fa59513bf78fe9bdc6eeec32b6207f63a7471e1305e8264be6a51d6"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 17407350,
        "transactionHash": "0x110e6a1e9d768040b66bdfb1dc5113749b49d9ca2a610e22b1cf7c43990f03a2",
        "address": "0xcA99c7ef5D2a71a636C07bACCE67E8EfcA60F7D9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000010c86853225241e9f4d13d97c81e5050c5c2e39b"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x38c605df9fa59513bf78fe9bdc6eeec32b6207f63a7471e1305e8264be6a51d6"
      }
    ],
    "blockNumber": 17407350,
    "cumulativeGasUsed": "728238",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x10C86853225241e9F4D13D97C81E5050C5C2e39b"
  ],
  "numDeployments": 1,
  "solcInputHash": "a294a85e3ec8b1d3651ff561c84835d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldValue\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"Descr500Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"ERC20Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaidOut\",\"type\":\"uint256\"}],\"name\":\"EthWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldValue\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"ImageURIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldValue\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"Name75Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldValue\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"ProfileURIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acct\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldValue\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"Title140Changed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeDescr500\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeImageURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeName75\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeProfileURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"changeTitle140\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"payoutEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawERC20Tokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"payoutEth(address)\":{\"notice\":\"Function that allows the owner to withdraw all the Ether in the contract The function can only be called by the owner of the contract as defined by the modifier\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Profiles.sol\":\"Profiles\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/PayableOwnable.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\n//A simple extension of Ownable that allows withdrawal of funds sent to a contract.\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract PayableOwnable is Ownable {\\r\\n\\r\\n\\tevent ERC20Withdrawal(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tuint256 amountPaidOut,\\r\\n\\t\\tIERC20 tokenContract\\r\\n\\t);\\r\\n\\r\\n\\tevent EthWithdrawal(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tuint256 amountPaidOut\\r\\n\\t);\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress payable initialOwner\\r\\n\\t)\\r\\n\\t\\tOwnable(initialOwner)\\r\\n\\t{\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdrawERC20Tokens(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tuint256 payAmount,\\r\\n\\t\\tIERC20 tokenContract\\r\\n\\t) virtual public onlyOwner {\\r\\n\\t\\trequire(_withdrawERC20Tokens(\\r\\n\\t\\t\\trecipient,\\r\\n\\t\\t\\tpayAmount,\\r\\n\\t\\t\\ttokenContract\\r\\n\\t\\t), 'Token withdrawal failed.');\\r\\n\\t}\\r\\n\\r\\n\\tfunction _withdrawERC20Tokens(\\r\\n\\t\\taddress recipient,\\r\\n\\t\\tuint256 payAmount,\\r\\n\\t\\tIERC20 tokenContract\\r\\n\\t) internal returns (bool success) {\\r\\n\\t\\t//Balance check should be done in ERC20 contract transfer fn\\r\\n\\t\\ttokenContract.transfer(recipient, payAmount);\\r\\n\\t\\temit ERC20Withdrawal(\\r\\n\\t\\t\\trecipient,\\r\\n\\t\\t\\tpayAmount,\\r\\n\\t\\t\\ttokenContract\\r\\n\\t\\t);\\r\\n\\t\\treturn tokenContract.transfer(recipient, payAmount);\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * Function that allows the owner to withdraw all the Ether in the contract\\r\\n\\t * The function can only be called by the owner of the contract as defined by the modifier\\r\\n\\t */\\r\\n\\tfunction payoutEth(\\r\\n\\t\\taddress payable recipient\\r\\n\\t) virtual public onlyOwner {\\r\\n\\t\\temit EthWithdrawal(\\r\\n\\t\\t\\trecipient,\\r\\n\\t\\t\\taddress(this).balance\\r\\n\\t\\t);\\r\\n\\t\\t(bool success, ) = payable(recipient).call{ value: address(this).balance }(\\\"\\\");\\r\\n\\t\\trequire(success, \\\"Failed to send Ether\\\");\\r\\n\\t}\\r\\n\\r\\n\\t/**\\r\\n\\t * Function that allows the contract to receive ETH\\r\\n\\t */\\r\\n\\treceive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x6aaeeb03ca98cdaa450922541e4e216c80abb9ebf2c438147e9e765354af7266\",\"license\":\"UNLICENSED\"},\"contracts/Profiles.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\n//Having profile information is mainly important for game/question sponsors and referees,\\r\\n//but players can have them too; all positions are public.\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"./PayableOwnable.sol\\\";\\r\\n\\r\\ncontract Profiles is PayableOwnable {\\r\\n\\r\\n\\tstruct Profile {\\r\\n\\t\\tstring imageURI;\\r\\n\\t\\tstring profileURI; // Could be linktree\\r\\n\\t\\tstring name75; // Up to 75 character name\\r\\n\\t\\tstring title140; // Up to 140 character title\\r\\n\\t\\tstring descr500; // Up to 500 character description\\r\\n\\t}\\r\\n\\r\\n\\tmapping(address => Profile) profiles;\\r\\n\\r\\n\\tevent ImageURIChanged(\\r\\n\\t\\taddress indexed acct,\\r\\n\\t\\tstring oldValue,\\r\\n\\t\\tstring newValue\\r\\n\\t);\\r\\n\\r\\n\\tevent ProfileURIChanged(\\r\\n\\t\\taddress indexed acct,\\r\\n\\t\\tstring oldValue,\\r\\n\\t\\tstring newValue\\r\\n\\t);\\r\\n\\r\\n\\tevent Name75Changed(\\r\\n\\t\\taddress indexed acct,\\r\\n\\t\\tstring oldValue,\\r\\n\\t\\tstring newValue\\r\\n\\t);\\r\\n\\r\\n\\tevent Title140Changed(\\r\\n\\t\\taddress indexed acct,\\r\\n\\t\\tstring oldValue,\\r\\n\\t\\tstring newValue\\r\\n\\t);\\r\\n\\r\\n\\tevent Descr500Changed(\\r\\n\\t\\taddress indexed acct,\\r\\n\\t\\tstring oldValue,\\r\\n\\t\\tstring newValue\\r\\n\\t);\\r\\n\\r\\n\\tconstructor(\\r\\n\\t\\taddress payable initialOwner\\r\\n\\t)\\r\\n\\t\\tPayableOwnable(initialOwner)\\r\\n\\t{\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeImageURI(\\r\\n\\t\\tstring calldata newValue\\r\\n\\t) public {\\r\\n\\t\\temit ImageURIChanged(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\tprofiles[msg.sender].imageURI,\\r\\n\\t\\t\\tnewValue\\r\\n\\t\\t);\\r\\n\\t\\tprofiles[msg.sender].imageURI = newValue;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeProfileURI(\\r\\n\\t\\tstring calldata newValue\\r\\n\\t) public {\\r\\n\\t\\temit ProfileURIChanged(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\tprofiles[msg.sender].profileURI,\\r\\n\\t\\t\\tnewValue\\r\\n\\t\\t);\\r\\n\\t\\tprofiles[msg.sender].profileURI = newValue;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeName75(\\r\\n\\t\\tstring calldata newValue\\r\\n\\t) public {\\r\\n\\t\\temit Name75Changed(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\tprofiles[msg.sender].name75,\\r\\n\\t\\t\\tnewValue\\r\\n\\t\\t);\\r\\n\\t\\tprofiles[msg.sender].name75 = newValue;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeTitle140(\\r\\n\\t\\tstring calldata newValue\\r\\n\\t) public {\\r\\n\\t\\temit Title140Changed(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\tprofiles[msg.sender].title140,\\r\\n\\t\\t\\tnewValue\\r\\n\\t\\t);\\r\\n\\t\\tprofiles[msg.sender].title140 = newValue;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeDescr500(\\r\\n\\t\\tstring calldata newValue\\r\\n\\t) public {\\r\\n\\t\\temit Descr500Changed(\\r\\n\\t\\t\\tmsg.sender,\\r\\n\\t\\t\\tprofiles[msg.sender].descr500,\\r\\n\\t\\t\\tnewValue\\r\\n\\t\\t);\\r\\n\\t\\tprofiles[msg.sender].descr500 = newValue;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x4c2cc35c863b15f861857e44cb779c78389d8de2a5db07febec7b47d4b290059\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bc4380380610bc483398101604081905261002f916100c0565b80806001600160a01b03811661005f57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006881610070565b5050506100f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b610ac5806100ff6000396000f3fe6080604052600436106100955760003560e01c8063a4c539d711610059578063a4c539d714610144578063a57f5d0614610164578063c7f64bcf14610184578063df37f5f0146101a4578063f2fde38b146101c457600080fd5b80631f5195b7146100a1578063285f9bfd146100c35780635b32cb44146100e3578063715018a6146101035780638da5cb5b1461011857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461076c565b6101e4565b005b3480156100cf57600080fd5b506100c16100de3660046107ae565b61024d565b3480156100ef57600080fd5b506100c16100fe3660046107ae565b6102ba565b34801561010f57600080fd5b506100c1610326565b34801561012457600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b34801561015057600080fd5b506100c161015f366004610820565b61033a565b34801561017057600080fd5b506100c161017f3660046107ae565b610421565b34801561019057600080fd5b506100c161019f3660046107ae565b610485565b3480156101b057600080fd5b506100c16101bf3660046107ae565b6104f2565b3480156101d057600080fd5b506100c16101df366004610820565b61055f565b6101ec61059d565b6101f78383836105ca565b6102485760405162461bcd60e51b815260206004820152601860248201527f546f6b656e207769746864726177616c206661696c65642e000000000000000060448201526064015b60405180910390fd5b505050565b336000818152600160205260409081902090517f60a4accb1933953bd4c6eccc1bc1b7fbdfc3d2afda96fe4bd1d10efadd5a98e09161029591600490910190869086906108a7565b60405180910390a23360009081526001602052604090206004016102488284836109ac565b3360008181526001602081905260409182902091517fc9922009f1d18318879bb70d1435455e05da6ead5151d57f01e4732a361fd8cf92610300920190869086906108a7565b60405180910390a2336000908152600160208190526040909120016102488284836109ac565b61032e61059d565b6103386000610707565b565b61034261059d565b604080516001600160a01b03831681524760208201527fc32d3c7eb0f275cbb5b72b3d3c688269430f30e5b9bb36980396edd9101c615c910160405180910390a16000816001600160a01b03164760405160006040518083038185875af1925050503d80600081146103d0576040519150601f19603f3d011682016040523d82523d6000602084013e6103d5565b606091505b505090508061041d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161023f565b5050565b336000818152600160205260409081902090517fdd5036f3df04e1e6d45995c9cb494c50103b49e93dbe787dac940f593e23b1619161046391869086906108a7565b60405180910390a23360009081526001602052604090206102488284836109ac565b336000818152600160205260409081902090517f049627c85961a9e650e9023d3efdfc59763a10a1b416133406d0c264c1c62c33916104cd91600390910190869086906108a7565b60405180910390a23360009081526001602052604090206003016102488284836109ac565b336000818152600160205260409081902090517fa0283b92d721e6b506aea05348672eea0734145c1d1fea760292481cace04df19161053a91600290910190869086906108a7565b60405180910390a23360009081526001602052604090206002016102488284836109ac565b61056761059d565b6001600160a01b03811661059157604051631e4fbdf760e01b81526000600482015260240161023f565b61059a81610707565b50565b6000546001600160a01b031633146103385760405163118cdaa760e01b815233600482015260240161023f565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490526000919083169063a9059cbb906044016020604051808303816000875af115801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190610a6d565b50604080516001600160a01b0386811682526020820186905284168183015290517fa509ab47ac3aeca0e9b7bbf64da33e62070bf4cfc81f2cfbdac1915196238fbc9181900360600190a160405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905283169063a9059cbb906044016020604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610a6d565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461059a57600080fd5b60008060006060848603121561078157600080fd5b833561078c81610757565b92506020840135915060408401356107a381610757565b809150509250925092565b600080602083850312156107c157600080fd5b823567ffffffffffffffff808211156107d957600080fd5b818501915085601f8301126107ed57600080fd5b8135818111156107fc57600080fd5b86602082850101111561080e57600080fd5b60209290920196919550909350505050565b60006020828403121561083257600080fd5b813561083d81610757565b9392505050565b600181811c9082168061085857607f821691505b60208210810361087857634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260008085546108b981610844565b80604086015260606001808416600081146108db57600181146108f557610926565b60ff1985168884015283151560051b880183019550610926565b8a60005260208060002060005b8681101561091d5781548b8201870152908401908201610902565b8a018501975050505b5050505050828103602084015261093e81858761087e565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b601f82111561024857600081815260208120601f850160051c810160208610156109855750805b601f850160051c820191505b818110156109a457828155600101610991565b505050505050565b67ffffffffffffffff8311156109c4576109c4610948565b6109d8836109d28354610844565b8361095e565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b178355610a66565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b600060208284031215610a7f57600080fd5b8151801515811461083d57600080fdfea2646970667358221220c06e9eea7c0be46e15ecd5219a7c3896fe9befaddfd5ef944e42f01759552d5a64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063a4c539d711610059578063a4c539d714610144578063a57f5d0614610164578063c7f64bcf14610184578063df37f5f0146101a4578063f2fde38b146101c457600080fd5b80631f5195b7146100a1578063285f9bfd146100c35780635b32cb44146100e3578063715018a6146101035780638da5cb5b1461011857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461076c565b6101e4565b005b3480156100cf57600080fd5b506100c16100de3660046107ae565b61024d565b3480156100ef57600080fd5b506100c16100fe3660046107ae565b6102ba565b34801561010f57600080fd5b506100c1610326565b34801561012457600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b34801561015057600080fd5b506100c161015f366004610820565b61033a565b34801561017057600080fd5b506100c161017f3660046107ae565b610421565b34801561019057600080fd5b506100c161019f3660046107ae565b610485565b3480156101b057600080fd5b506100c16101bf3660046107ae565b6104f2565b3480156101d057600080fd5b506100c16101df366004610820565b61055f565b6101ec61059d565b6101f78383836105ca565b6102485760405162461bcd60e51b815260206004820152601860248201527f546f6b656e207769746864726177616c206661696c65642e000000000000000060448201526064015b60405180910390fd5b505050565b336000818152600160205260409081902090517f60a4accb1933953bd4c6eccc1bc1b7fbdfc3d2afda96fe4bd1d10efadd5a98e09161029591600490910190869086906108a7565b60405180910390a23360009081526001602052604090206004016102488284836109ac565b3360008181526001602081905260409182902091517fc9922009f1d18318879bb70d1435455e05da6ead5151d57f01e4732a361fd8cf92610300920190869086906108a7565b60405180910390a2336000908152600160208190526040909120016102488284836109ac565b61032e61059d565b6103386000610707565b565b61034261059d565b604080516001600160a01b03831681524760208201527fc32d3c7eb0f275cbb5b72b3d3c688269430f30e5b9bb36980396edd9101c615c910160405180910390a16000816001600160a01b03164760405160006040518083038185875af1925050503d80600081146103d0576040519150601f19603f3d011682016040523d82523d6000602084013e6103d5565b606091505b505090508061041d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640161023f565b5050565b336000818152600160205260409081902090517fdd5036f3df04e1e6d45995c9cb494c50103b49e93dbe787dac940f593e23b1619161046391869086906108a7565b60405180910390a23360009081526001602052604090206102488284836109ac565b336000818152600160205260409081902090517f049627c85961a9e650e9023d3efdfc59763a10a1b416133406d0c264c1c62c33916104cd91600390910190869086906108a7565b60405180910390a23360009081526001602052604090206003016102488284836109ac565b336000818152600160205260409081902090517fa0283b92d721e6b506aea05348672eea0734145c1d1fea760292481cace04df19161053a91600290910190869086906108a7565b60405180910390a23360009081526001602052604090206002016102488284836109ac565b61056761059d565b6001600160a01b03811661059157604051631e4fbdf760e01b81526000600482015260240161023f565b61059a81610707565b50565b6000546001600160a01b031633146103385760405163118cdaa760e01b815233600482015260240161023f565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490526000919083169063a9059cbb906044016020604051808303816000875af115801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190610a6d565b50604080516001600160a01b0386811682526020820186905284168183015290517fa509ab47ac3aeca0e9b7bbf64da33e62070bf4cfc81f2cfbdac1915196238fbc9181900360600190a160405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905283169063a9059cbb906044016020604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190610a6d565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461059a57600080fd5b60008060006060848603121561078157600080fd5b833561078c81610757565b92506020840135915060408401356107a381610757565b809150509250925092565b600080602083850312156107c157600080fd5b823567ffffffffffffffff808211156107d957600080fd5b818501915085601f8301126107ed57600080fd5b8135818111156107fc57600080fd5b86602082850101111561080e57600080fd5b60209290920196919550909350505050565b60006020828403121561083257600080fd5b813561083d81610757565b9392505050565b600181811c9082168061085857607f821691505b60208210810361087857634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260008085546108b981610844565b80604086015260606001808416600081146108db57600181146108f557610926565b60ff1985168884015283151560051b880183019550610926565b8a60005260208060002060005b8681101561091d5781548b8201870152908401908201610902565b8a018501975050505b5050505050828103602084015261093e81858761087e565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b601f82111561024857600081815260208120601f850160051c810160208610156109855750805b601f850160051c820191505b818110156109a457828155600101610991565b505050505050565b67ffffffffffffffff8311156109c4576109c4610948565b6109d8836109d28354610844565b8361095e565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b178355610a66565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b600060208284031215610a7f57600080fd5b8151801515811461083d57600080fdfea2646970667358221220c06e9eea7c0be46e15ecd5219a7c3896fe9befaddfd5ef944e42f01759552d5a64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "payoutEth(address)": {
        "notice": "Function that allows the owner to withdraw all the Ether in the contract The function can only be called by the owner of the contract as defined by the modifier"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2453,
        "contract": "contracts/Profiles.sol:Profiles",
        "label": "profiles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Profile)2448_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Profile)2448_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Profiles.Profile)",
        "numberOfBytes": "32",
        "value": "t_struct(Profile)2448_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Profile)2448_storage": {
        "encoding": "inplace",
        "label": "struct Profiles.Profile",
        "members": [
          {
            "astId": 2439,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "imageURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2441,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "profileURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2443,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "name75",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2445,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "title140",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 2447,
            "contract": "contracts/Profiles.sol:Profiles",
            "label": "descr500",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      }
    }
  }
}